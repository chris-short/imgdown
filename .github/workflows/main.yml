name: Release Rust Binary

on:
  push:
    tags:
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: imgdown

jobs:
  release:
    name: Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: linux
            asset_name: ${{ env.BINARY_NAME }}-linux-amd64
          - os: windows-latest
            artifact_name: windows
            asset_name: ${{ env.BINARY_NAME }}-windows-amd64.exe
          - os: macos-latest
            artifact_name: macos
            asset_name: ${{ env.BINARY_NAME }}-macos-amd64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build binary
        run: cargo build --release

      - name: Prepare binary
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp target/release/${{ env.BINARY_NAME }}.exe ${{ matrix.asset_name }}
          else
            cp target/release/${{ env.BINARY_NAME }} ${{ matrix.asset_name }}
          fi

      - name: Generate SHA-256
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            certutil -hashfile ${{ matrix.asset_name }} SHA256 > ${{ matrix.asset_name }}.sha256
          else
            shasum -a 256 ${{ matrix.asset_name }} > ${{ matrix.asset_name }}.sha256
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ matrix.asset_name }}
            ${{ matrix.asset_name }}.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
